{========================================================
   ListVew ²Ù×÷µ¥Ôª
   @ zhiguo.wu
   2014-06-12 21:00
========================================================}

unit uList;


interface

uses Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ImgList, ComCtrls, ADODB, DB;

type
  ptTreeNode = ^TTreeData;

  TTreeData = record
    NodeValue: string;

  end;

implementation

uses uDBModule;

var
  FileTreeNode: ptTreeNode;


procedure FillTreeViewFile(TreeView: TTreeView; TargetNode: TTreeNode);
var
  TreeNodeParent: TTreeNode;

  procedure CreateSubTree(FNodeName: string; Node: TTreeNode);
  var
    TreeNode: TTreeNode;
  begin
    with DBConn.FDSView do
    try
      Close;
      CommandText := ' SELECT type_no, type_name FROM plm_obj_type WHERE type_parent =''' + FNodeName + ''' ORDER BY type_no ';
      Open;
      First;
      while not Eof do
      begin
        New(FileTreeNode);
        FileTreeNode^.nodeValue := FieldbyName('TYPE_NO').Asstring;
        TreeNode := TreeView.Items.AddChildObject(node, FieldByName('TYPE_NAME').AsString, FileTreeNode);
        TreeNode.ImageIndex := 2;
        TreeNode.SelectedIndex := 3;
        Next;
      end;
    finally
    end;
  end;

begin
  TreeView.Items.BeginUpdate;
  //TreeView.Items.Clear;
  if TargetNode <> nil then
    TargetNode.DeleteChildren;

  DBConn.GetRecord(DBConn.FViewQuery, 'SELECT type_no, type_name FROM plm_obj_type WHERE type_parent = ''file'' ORDER BY type_no');

  while not DBConn.FViewQuery.Eof do
  begin
    New(FileTreeNode);
    FileTreeNode^.nodeValue := DBConn.FViewQuery.fieldbyname('TYPE_NO').asstring;
    TreeNodeParent := TreeView.Items.AddChildObject(TargetNode, DBConn.FViewQuery.FieldByName('TYPE_NAME').AsString, FileTreeNode);
    begin
      TreeNodeParent.ImageIndex := 0;
      TreeNodeParent.SelectedIndex := 0;
    end;
    CreateSubTree(DBConn.FViewQuery.fieldbyname('TYPE_NO').asstring, TreeNodeParent);
    DBConn.FViewQuery.Next;
  end;
  TreeView.Items.EndUpdate;
end;

end.

