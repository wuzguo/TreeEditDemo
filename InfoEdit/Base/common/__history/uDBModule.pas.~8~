unit uDBModule;

interface

uses
  SysUtils, Classes, DB, ADODB, DBAccess, Ora, IniFiles, Dialogs, uConfig;

const
  DBCONFIG_FILENAME = '/config/DBConn.ini';
type
  TDBConn = class(TDataModule)
    DBConnect: TADOConnection;
    FListQuery: TADOQuery;
    FViewQuery: TADOQuery;
  private
    configFile: TDBConfig;

  public
    constructor Create(); override;
    destructor Destroy; override;

    function ConnDataBase(configFile: TDBConfig; var FConnect: TADOConnection): Boolean;
    { Public declarations }
  end;

var
  DBConn: TDBConn;

implementation


{$R *.dfm}

{ TDBConn }

constructor TDBConn.Create(AOwner: TComponent);
begin
  inherited;

  configFile := TDBConfig.Create(DBCONFIG_FILENAME);
end;

destructor TDBConn.Destroy;
begin
  FreeAndNil(configFile);
  inherited;
end;


function TDBConn.ConnDataBase(configFile: TDBConfig; var FConnect: TADOConnection): Boolean;
var
  StrConnnTmp: string;
begin
  Result := False;

  StrConnnTmp := configFile.StrConn;

  if Trim(StrConnnTmp) = '' then Exit;

  StrConnnTmp := Format(StrConnnTmp, [configFile.PassWord, configFile.DBName]);

  try
    FConnect.Connected:= False;
    FConnect.KeepConnection:= True;
    FConnect.LoginPrompt:= False;

    FConnect.ConnectionString:= StrConnnTmp;

    FConnect.Connected:= True;

    Result:= True;
  except
    on e: Exception do
    begin
      ShowMessage('数据库连接错误：' + e.Message);
    end;
  end;
end;

function TDBConn.ConnDataBase(strCon: string; var FConnect: TADOConnection): Boolean;
begin

end;
end.

